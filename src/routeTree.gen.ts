/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as PhotosIndexImport } from './routes/photos.index'
import { Route as PhotosIdImport } from './routes/photos.$id'
import { Route as PhotosIdModalImport } from './routes/photos_.$id.modal'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PhotosIndexRoute = PhotosIndexImport.update({
  id: '/photos/',
  path: '/photos/',
  getParentRoute: () => rootRoute,
} as any)

const PhotosIdRoute = PhotosIdImport.update({
  id: '/photos/$id',
  path: '/photos/$id',
  getParentRoute: () => rootRoute,
} as any)

const PhotosIdModalRoute = PhotosIdModalImport.update({
  id: '/photos_/$id/modal',
  path: '/photos/$id/modal',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/photos/$id': {
      id: '/photos/$id'
      path: '/photos/$id'
      fullPath: '/photos/$id'
      preLoaderRoute: typeof PhotosIdImport
      parentRoute: typeof rootRoute
    }
    '/photos/': {
      id: '/photos/'
      path: '/photos'
      fullPath: '/photos'
      preLoaderRoute: typeof PhotosIndexImport
      parentRoute: typeof rootRoute
    }
    '/photos_/$id/modal': {
      id: '/photos_/$id/modal'
      path: '/photos/$id/modal'
      fullPath: '/photos/$id/modal'
      preLoaderRoute: typeof PhotosIdModalImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/photos/$id': typeof PhotosIdRoute
  '/photos': typeof PhotosIndexRoute
  '/photos/$id/modal': typeof PhotosIdModalRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/photos/$id': typeof PhotosIdRoute
  '/photos': typeof PhotosIndexRoute
  '/photos/$id/modal': typeof PhotosIdModalRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/photos/$id': typeof PhotosIdRoute
  '/photos/': typeof PhotosIndexRoute
  '/photos_/$id/modal': typeof PhotosIdModalRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/photos/$id' | '/photos' | '/photos/$id/modal'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/photos/$id' | '/photos' | '/photos/$id/modal'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/photos/$id'
    | '/photos/'
    | '/photos_/$id/modal'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  PhotosIdRoute: typeof PhotosIdRoute
  PhotosIndexRoute: typeof PhotosIndexRoute
  PhotosIdModalRoute: typeof PhotosIdModalRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  PhotosIdRoute: PhotosIdRoute,
  PhotosIndexRoute: PhotosIndexRoute,
  PhotosIdModalRoute: PhotosIdModalRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/photos/$id",
        "/photos/",
        "/photos_/$id/modal"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/photos/$id": {
      "filePath": "photos.$id.tsx"
    },
    "/photos/": {
      "filePath": "photos.index.tsx"
    },
    "/photos_/$id/modal": {
      "filePath": "photos_.$id.modal.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
