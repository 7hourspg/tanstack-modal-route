/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PhotosModalImport } from './routes/photos-modal'
import { Route as PhotosIdImport } from './routes/photos-id'
import { Route as PhotosImport } from './routes/photos'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const PhotosModalRoute = PhotosModalImport.update({
  id: '/photos-modal',
  path: '/photos-modal',
  getParentRoute: () => rootRoute,
} as any)

const PhotosIdRoute = PhotosIdImport.update({
  id: '/photos-id',
  path: '/photos-id',
  getParentRoute: () => rootRoute,
} as any)

const PhotosRoute = PhotosImport.update({
  id: '/photos',
  path: '/photos',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/photos': {
      id: '/photos'
      path: '/photos'
      fullPath: '/photos'
      preLoaderRoute: typeof PhotosImport
      parentRoute: typeof rootRoute
    }
    '/photos-id': {
      id: '/photos-id'
      path: '/photos-id'
      fullPath: '/photos-id'
      preLoaderRoute: typeof PhotosIdImport
      parentRoute: typeof rootRoute
    }
    '/photos-modal': {
      id: '/photos-modal'
      path: '/photos-modal'
      fullPath: '/photos-modal'
      preLoaderRoute: typeof PhotosModalImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/photos': typeof PhotosRoute
  '/photos-id': typeof PhotosIdRoute
  '/photos-modal': typeof PhotosModalRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/photos': typeof PhotosRoute
  '/photos-id': typeof PhotosIdRoute
  '/photos-modal': typeof PhotosModalRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/photos': typeof PhotosRoute
  '/photos-id': typeof PhotosIdRoute
  '/photos-modal': typeof PhotosModalRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/photos' | '/photos-id' | '/photos-modal'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/photos' | '/photos-id' | '/photos-modal'
  id: '__root__' | '/' | '/about' | '/photos' | '/photos-id' | '/photos-modal'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  PhotosRoute: typeof PhotosRoute
  PhotosIdRoute: typeof PhotosIdRoute
  PhotosModalRoute: typeof PhotosModalRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  PhotosRoute: PhotosRoute,
  PhotosIdRoute: PhotosIdRoute,
  PhotosModalRoute: PhotosModalRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/photos",
        "/photos-id",
        "/photos-modal"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/photos": {
      "filePath": "photos.tsx"
    },
    "/photos-id": {
      "filePath": "photos-id.tsx"
    },
    "/photos-modal": {
      "filePath": "photos-modal.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
