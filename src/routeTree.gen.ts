/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PhotosRouteImport } from './routes/photos'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PhotosIdRouteImport } from './routes/photos_.$id'
import { Route as PhotosChar123idChar125_modalRouteImport } from './routes/photos.{$id}_modal'

const PhotosRoute = PhotosRouteImport.update({
  id: '/photos',
  path: '/photos',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PhotosIdRoute = PhotosIdRouteImport.update({
  id: '/photos_/$id',
  path: '/photos/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const PhotosChar123idChar125_modalRoute =
  PhotosChar123idChar125_modalRouteImport.update({
    id: '/{$id}_modal',
    path: '/{$id}_modal',
    getParentRoute: () => PhotosRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/photos': typeof PhotosRouteWithChildren
  '/photos/{$id}_modal': typeof PhotosChar123idChar125_modalRoute
  '/photos/$id': typeof PhotosIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/photos': typeof PhotosRouteWithChildren
  '/photos/{$id}_modal': typeof PhotosChar123idChar125_modalRoute
  '/photos/$id': typeof PhotosIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/photos': typeof PhotosRouteWithChildren
  '/photos/{$id}_modal': typeof PhotosChar123idChar125_modalRoute
  '/photos_/$id': typeof PhotosIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/photos' | '/photos/{$id}_modal' | '/photos/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/photos' | '/photos/{$id}_modal' | '/photos/$id'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/photos'
    | '/photos/{$id}_modal'
    | '/photos_/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  PhotosRoute: typeof PhotosRouteWithChildren
  PhotosIdRoute: typeof PhotosIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/photos': {
      id: '/photos'
      path: '/photos'
      fullPath: '/photos'
      preLoaderRoute: typeof PhotosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/photos_/$id': {
      id: '/photos_/$id'
      path: '/photos/$id'
      fullPath: '/photos/$id'
      preLoaderRoute: typeof PhotosIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/photos/{$id}_modal': {
      id: '/photos/{$id}_modal'
      path: '/{$id}_modal'
      fullPath: '/photos/{$id}_modal'
      preLoaderRoute: typeof PhotosChar123idChar125_modalRouteImport
      parentRoute: typeof PhotosRoute
    }
  }
}

interface PhotosRouteChildren {
  PhotosChar123idChar125_modalRoute: typeof PhotosChar123idChar125_modalRoute
}

const PhotosRouteChildren: PhotosRouteChildren = {
  PhotosChar123idChar125_modalRoute: PhotosChar123idChar125_modalRoute,
}

const PhotosRouteWithChildren =
  PhotosRoute._addFileChildren(PhotosRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  PhotosRoute: PhotosRouteWithChildren,
  PhotosIdRoute: PhotosIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
